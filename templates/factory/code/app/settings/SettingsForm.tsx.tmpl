'use client'

import { useState } from 'react'
import { User } from 'next-auth'

const formStyles = {
  form: "p-6 space-y-6",
  label: "block text-sm font-medium text-gray-700 dark:text-gray-300",
  input: "mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-accent-yellow focus:border-accent-yellow dark:bg-gray-700 dark:border-gray-600 dark:text-white",
  button: "w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-gray-900 bg-accent-yellow hover:bg-accent-yellow-light focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-accent-yellow",
  successMessage: "mt-2 text-sm text-green-600 dark:text-green-400",
  errorMessage: "mt-2 text-sm text-red-600 dark:text-red-400",
} as const;

interface SettingsFormProps {
  user: User
}

export function SettingsForm({ user }: SettingsFormProps) {
  const [displayName, setDisplayName] = useState(user.name || '')
  const [message, setMessage] = useState('')
  const [error, setError] = useState('')

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setMessage('')
    setError('')

    try {
      const response = await fetch('/api/user/update-name', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name: displayName }),
      })

      if (response.ok) {
        setMessage('Display name updated successfully!')
      } else {
        setError('Failed to update display name. Please try again.')
      }
    } catch (err) {
      setError('An error occurred. Please try again.')
    }
  }

  return (
    <form onSubmit={handleSubmit} className={formStyles.form}>
      <div>
        <label htmlFor="displayName" className={formStyles.label}>
          Display Name
        </label>
        <input
          type="text"
          id="displayName"
          value={displayName}
          onChange={(e) => setDisplayName(e.target.value)}
          className={formStyles.input}
        />
      </div>
      <button type="submit" className={formStyles.button}>
        Update Display Name
      </button>
      {message && <p className={formStyles.successMessage}>{message}</p>}
      {error && <p className={formStyles.errorMessage}>{error}</p>}
    </form>
  )
}
